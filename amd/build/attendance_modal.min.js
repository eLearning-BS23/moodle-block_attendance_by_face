define("block_attendance_by_face/attendance_modal",["exports","jquery","core/modal_factory","core/notification","./webcam","core/ajax"],(function(_exports,_jquery,_modal_factory,_notification,_webcam,_ajax){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_jquery=_interopRequireDefault(_jquery),_modal_factory=_interopRequireDefault(_modal_factory),_notification=_interopRequireDefault(_notification),_webcam=_interopRequireDefault(_webcam),_ajax=_interopRequireDefault(_ajax);_exports.init=(studentid,successmessage,failedmessage,threshold)=>{(0,_jquery.default)(".action-modal").on("click",(function(){let st_img_url="",course_name="",course_id=(0,_jquery.default)(this).attr("id"),request={methodname:"block_attendance_by_face_image_api",args:{courseid:course_id,studentid:studentid}};_ajax.default.call([request])[0].done((function(value){st_img_url=value.image_url,course_name=value.course_name,create_modal()})).fail(_notification.default.exception);let create_modal=()=>{_modal_factory.default.create({type:_modal_factory.default.types.SAVE_CANCEL,title:"Turn on webcam",body:'\n        <div>\n        <p>Webcam will be turned on to take video and image input for your attendance.\n        <i class="icon fa fa-exclamation-circle text-muted fa-fw " \n            title="If facing any issue with webcam, refresh the site and try again" role="img" \n            aria-label="If facing any issue with webcam, refresh the site and try again">\n        </i>\n        </p>\n        </div>\n        <video id="webcam" autoplay playsinline width="300" height="225" style="display:none;margin:auto"></video>\n        <canvas id="canvas" class="d-none" style="display:none;"></canvas>\n        <img id="st-image" style="display: none;"/>\n        <div style="display: flex; flex-wrap: wrap; align-items: center; justify-content: center; padding: 0.75rem;">\n        \n          <button id=\'start-webcam\' class="btn btn-primary" >Start Webcam</button>\n          <button id="submit-attendance" style="display:none;" class="btn btn-primary" >Submit attendance</button>\n          <button id="try-again" style="display:none;" class="btn btn-primary" >Try again</button>\n          <button id=\'stop-webcam\' class="btn btn-secondary" style="margin-left:5px;">Cancel</button>\n        \n        </div>\n        <div id="message"></div>'}).then((function(modal){modal.show(),(0,_jquery.default)(".modal-footer").hide();const webcamElement=document.getElementById("webcam"),canvasElement=document.getElementById("canvas");let studentimg=document.getElementById("st-image");studentimg.src=st_img_url;let st_img="",webcam=new _webcam.default(webcamElement,"user",canvasElement);(0,_jquery.default)(".close").on("click",(function(){webcam.stop(),window.location.href=(0,_jquery.default)(location).attr("href")}));let hideSubmitAttendance=()=>{document.getElementById("submit-attendance").style.display="none"},removeMessages=()=>{const message=document.getElementById("message");for(;message.hasChildNodes();)message.removeChild(message.firstChild)},displayFailedMessage=()=>{hideSubmitAttendance(),document.getElementById("try-again").style.display="block",displayMessage(failedmessage,0)},displayMessage=(message,flag)=>{var spn=document.createElement("span");spn.textContent=message+".",spn.setAttribute("class",flag?"text-success":"text-danger"),document.getElementById("message").appendChild(spn)},submitAttendance=(st_img,image,sessionId)=>{let request={methodname:"block_face_recognition_student_attendance_face_recog_api",args:{studentimg:st_img,webcampicture:image}};_ajax.default.call([request])[0].done((function(value){let result=value.confidence;if(window.console.log(value),result>=threshold){let today=new Date;webcam.stop(),hideSubmitAttendance(),displayMessage(successmessage,1),(sessionId=>{let request={methodname:"block_attendance_by_face_update_db",args:{courseid:course_id,studentid:studentid,sessionid:sessionId}};console.log(request),_ajax.default.call([request])[0].done((function(){window.console.log("Attendance logged")})).fail(_notification.default.exception)})(sessionId),_notification.default.confirm("Attendance submitted successfully","\n                  Course: ".concat(course_name,"<br>\n                  Date: ").concat(today.toLocaleDateString("en-UK"),"<br>\n                  "),"Continue","Cancel",(()=>window.location.href=(0,_jquery.default)(location).attr("href")),(()=>window.location.href=(0,_jquery.default)(location).attr("href")))}else displayFailedMessage()})).fail((function(err){window.console.log(err)}))};(0,_jquery.default)("#start-webcam").on("click",(function(){webcamElement.style.display="block",canvasElement.style.display="block",(0,_jquery.default)("#start-webcam").hide(),webcam.start().then((result=>{document.getElementById("submit-attendance").style.display="block",(0,_jquery.default)("#submit-attendance").on("click",(function(){removeMessages(),st_img||(st_img=(studentimg=>{const canvas=document.createElement("canvas"),ctx=canvas.getContext("2d");return canvas.width=studentimg.width,canvas.height=studentimg.height,ctx.drawImage(studentimg,0,0),canvas.toDataURL("image/png")})(studentimg));let image=webcam.snap(),params={courseid:course_id},request={methodname:"block_attendance_by_face_check_active_window",args:params};console.log(params),_ajax.default.call([request])[0].done((function(value){console.log(value),1==value.active?(console.log("Active Course"),submitAttendance(st_img,image,value.sessionid)):displayMessage("Course is not open for taking attendance",0)})).fail((function(err){window.console.log(err)}))})),(0,_jquery.default)("#try-again").on("click",(function(){removeMessages(),document.getElementById("try-again").style.display="none",document.getElementById("submit-attendance").click()}))})).catch((err=>{window.console.log(err)}))})),(0,_jquery.default)("#stop-webcam").on("click",(function(){webcam.stop(),window.location.href=(0,_jquery.default)(location).attr("href")}))}))}}))}}));

//# sourceMappingURL=attendance_modal.min.js.map