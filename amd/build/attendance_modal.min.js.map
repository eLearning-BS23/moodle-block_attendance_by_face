{"version":3,"file":"attendance_modal.min.js","sources":["../src/attendance_modal.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/str','core/modal_factory', 'core/notification', './webcam'],\n    function($, Ajax, str, ModalFactory, Notification, Webcam) {\n      return {\n        async init (studentid, successmessage, failedmessage, threshold) {\n        $(\".action-modal\").on(\"click\", function () {\n          let st_img_url = \"\";\n          let course_name = \"\";\n          let course_id = $(this).attr(\"id\");\n      \n          // ajax call\n          let wsfunction = \"block_attendance_by_face_image_api\";\n          let params = {\n            courseid: course_id,\n            studentid: studentid,\n          };\n          let request = {\n            methodname: wsfunction,\n            args: params,\n          };\n      \n          Ajax.call([request])[0]\n            .done(function (value) {\n              st_img_url = value[\"image_url\"];\n              course_name = value[\"course_name\"];\n              create_modal();\n            })\n            .fail(Notification.exception);\n          // end of ajax call\n\n          let desc_webcam = \"\"; \n\n          $.when(str.get_string('desc_webcam', 'block_attendance_by_face')).done(function (output) {\n            desc_webcam = output;\n          })\n\n          let start_webcam = \"\";\n\n          $.when(str.get_string('start_webcam', 'block_attendance_by_face')).done(function (output) {\n            start_webcam = output;\n          })\n\n          let submit_attendance = \"\";\n\n          $.when(str.get_string('submit_attendance', 'block_attendance_by_face')).done(function (output) {\n            submit_attendance = output;\n          })\n\n          let try_again = \"\";\n\n          $.when(str.get_string('try_again', 'block_attendance_by_face')).done(function (output) {\n            try_again = output;\n          })\n\n          let cancel = \"\";\n\n          $.when(str.get_string('cancel', 'block_attendance_by_face')).done(function (output) {\n            cancel = output;\n          })\n\n          let warning = \"\";\n\n          $.when(str.get_string('warning_webcam', 'block_attendance_by_face')).done(function (output) {\n            warning = output;\n          })\n      \n          let create_modal = () => {\n            ModalFactory.create({\n              type: ModalFactory.types.SAVE_CANCEL,\n              title: str.get_string('title_webcam', 'block_attendance_by_face'),\n              body: `\n              <div>\n              <p id='desc_webcam'> ` + desc_webcam + `\n              <i class=\"icon fa fa-exclamation-circle text-muted fa-fw\" \n                  title=\" ` + warning + ` \" role=\"img\" \n                  aria-label=\" ` + warning + ` \">\n              </i>\n              </p>\n              </div>\n              <video id=\"webcam\" autoplay playsinline width=\"300\" height=\"225\" style=\"display:none;margin:auto\"></video>\n              <canvas id=\"canvas\" class=\"d-none\" style=\"display:none;\"></canvas>\n              <img id=\"st-image\" style=\"display: none;\"/>\n              <div style=\"display: flex; flex-wrap: wrap; align-items: center; justify-content: center; padding: 0.75rem;\">\n                <button id='start-webcam' class=\"btn btn-primary\"> ` + start_webcam +  `</button>\n                <button id=\"submit-attendance\" style=\"display:none;\" class=\"btn btn-primary\"> ` + submit_attendance + `</button>\n                <button id=\"try-again\" style=\"display:none;\" class=\"btn btn-primary\"> ` + try_again + ` </button>\n                <button id='stop-webcam' class=\"btn btn-secondary\" style=\"margin-left:5px;\"> ` + cancel + ` </button>\n              </div>\n              <div id=\"message\"></div>`,\n            }).then(function (modal) {\n              modal.show();\n              $(\".modal-footer\").hide();\n              const webcamElement = document.getElementById(\"webcam\");\n              const canvasElement = document.getElementById(\"canvas\");\n              let studentimg = document.getElementById(\"st-image\");\n              studentimg.src = st_img_url;\n              let st_img = \"\";\n      \n              let webcam = new Webcam(webcamElement, \"user\", canvasElement);\n      \n              $(\".close\").on(\"click\", function () {\n                webcam.stop();\n                window.location.href = $(location).attr(\"href\");\n              });\n      \n              let getDataUrl = (studentimg) => {\n                const canvas = document.createElement(\"canvas\");\n                const ctx = canvas.getContext(\"2d\");\n                // Set width and height\n                canvas.width = studentimg.width;\n                canvas.height = studentimg.height;\n                // Draw the image\n                ctx.drawImage(studentimg, 0, 0);\n                return canvas.toDataURL(\"image/png\");\n              };\n              let displaySubmitAttendance = () => {\n                document.getElementById(\"submit-attendance\").style.display = \"block\";\n              };\n              let hideSubmitAttendance = () => {\n                document.getElementById(\"submit-attendance\").style.display = \"none\";\n              };\n              let displayTryAgain = () => {\n                document.getElementById(\"try-again\").style.display = \"block\";\n              };\n              let hideTryAgain = () => {\n                document.getElementById(\"try-again\").style.display = \"none\";\n              };\n              let removeMessages = () => {\n                const message = document.getElementById(\"message\");\n                while (message.hasChildNodes()) {\n                  message.removeChild(message.firstChild);\n                }\n              };\n              let displaySuccessMessage = () => {\n                hideSubmitAttendance();\n                displayMessage(successmessage, 1);\n              };\n              let displayFailedMessage = () => {\n                hideSubmitAttendance();\n                displayTryAgain();\n                displayMessage(failedmessage, 0);\n              };\n              let displayMessage = (message, flag) => {\n                var spn = document.createElement(\"span\");\n                spn.textContent = message + \".\";\n                spn.setAttribute(\"class\", flag ? \"text-success\" : \"text-danger\");\n                document.getElementById(\"message\").appendChild(spn);\n              };\n              let logAttendance = (sessionId) => {\n                let wsfunction =\n                  \"block_attendance_by_face_update_db\";\n                let params = {\n                  courseid: course_id,\n                  studentid: studentid,\n                  sessionid: sessionId,\n                };\n                let request = {\n                  methodname: wsfunction,\n                  args: params,\n                };\n                console.log(request);\n                Ajax.call([request])[0]\n                  .done(function () {\n                    window.console.log(\"Attendance logged\");\n                  })\n                  .fail(Notification.exception);\n              };\n              let submitAttendance = (st_img, image, sessionId) => {\n                let wsfunction =\n                  \"block_face_recognition_student_attendance_face_recog_api\";\n                let params = {\n                  studentimg: st_img,\n                  webcampicture: image,\n                };\n                let request = {\n                  methodname: wsfunction,\n                  args: params,\n                };\n      \n                Ajax.call([request])[0]\n                  .done(function (value) {\n                    let result = value[\"confidence\"];\n                    window.console.log(value);\n      \n                    if (result >= threshold) {\n                      let today = new Date();\n                      webcam.stop();\n                      displaySuccessMessage();\n                      logAttendance(sessionId);\n      \n                      Notification.confirm(\n                        \"Attendance submitted successfully\",\n                        `\n                        Course: ${course_name}<br>\n                        Date: ${today.toLocaleDateString(\"en-UK\")}<br>\n                        `,\n                        \"Continue\", // Confirm.\n                        \"Cancel\", // Cancel.\n                        () => (window.location.href = $(location).attr(\"href\")),\n                        () => (window.location.href = $(location).attr(\"href\"))\n                      );\n                    } else {\n                      displayFailedMessage();\n                    }\n                  })\n                  .fail(function (err) {\n                    window.console.log(err);\n                  });\n                // end of ajax call\n              };\n              // let getRequestForCheckingActiveWindowAPI = (course_id) => {\n              //   let wsfunction =\n              //     \"block_face_recognition_student_attendance_check_active_window\";\n              //   let params = {\n              //     courseid: course_id\n              //   };\n              //   let request = {\n              //     methodname: wsfunction,\n              //     args: params,\n              //   };\n              //   return request;\n              // }\n              $(\"#start-webcam\").on(\"click\", function () {\n                webcamElement.style.display = \"block\";\n                canvasElement.style.display = \"block\";\n                $(\"#start-webcam\").hide();\n                webcam\n                  .start()\n                  .then((result) => {\n                    displaySubmitAttendance();\n      \n                    $(\"#submit-attendance\").on(\"click\", function () {\n                      removeMessages();\n                      if (!st_img) {\n                        st_img = getDataUrl(studentimg);\n                      }\n                      let image = webcam.snap();\n                      //let request = getRequestForCheckingActiveWindowAPI(course_id);\n                      let wsfunction =\n                        \"block_attendance_by_face_check_active_window\";\n                      let params = {\n                        courseid: course_id\n                      };\n                      let request = {\n                        methodname: wsfunction,\n                        args: params,\n                      };\n                      console.log(params);\n                      \n                      Ajax.call([request])[0]\n                      .done(function (value) {\n                        console.log(value);\n                        if(value.active == 1) {\n                          console.log('Active Course');\n                          submitAttendance(st_img, image, value.sessionid);\n                        }\n                        else {\n                          displayMessage(\"Course is not open for taking attendance\", 0);\n                        }\n                      })\n                      .fail(function (err) {\n                        window.console.log(err);\n                      });\n                      \n      \n                    });\n                    $(\"#try-again\").on(\"click\", function () {\n                      removeMessages();\n                      hideTryAgain();\n                      document.getElementById(\"submit-attendance\").click();\n                    });\n                  })\n                  .catch((err) => {\n                    window.console.log(err);\n                  });\n              });\n              $(\"#stop-webcam\").on(\"click\", function () {\n                webcam.stop();\n                window.location.href = $(location).attr(\"href\");\n              });\n            });\n          };\n        });\n      }\n    };\n    }\n  );"],"names":["define","$","Ajax","str","ModalFactory","Notification","Webcam","studentid","successmessage","failedmessage","threshold","on","st_img_url","course_name","course_id","this","attr","request","methodname","args","courseid","call","done","value","create_modal","fail","exception","desc_webcam","when","get_string","output","start_webcam","submit_attendance","try_again","cancel","warning","create","type","types","SAVE_CANCEL","title","body","then","modal","show","hide","webcamElement","document","getElementById","canvasElement","studentimg","src","st_img","webcam","stop","window","location","href","hideSubmitAttendance","style","display","removeMessages","message","hasChildNodes","removeChild","firstChild","displayFailedMessage","displayMessage","flag","spn","createElement","textContent","setAttribute","appendChild","submitAttendance","image","sessionId","webcampicture","result","console","log","today","Date","sessionid","logAttendance","confirm","toLocaleDateString","err","start","canvas","ctx","getContext","width","height","drawImage","toDataURL","getDataUrl","snap","params","active","click","catch"],"mappings":"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"}