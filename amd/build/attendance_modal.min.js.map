{"version":3,"file":"attendance_modal.min.js","sources":["../src/attendance_modal.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/str','core/modal_factory', 'core/notification', './webcam'],\n    function($, Ajax, str, ModalFactory, Notification, Webcam) {\n      return {\n        async init (studentid, successmessage, failedmessage, threshold, modelurl) {\n          // Load the model.\n          await faceapi.nets.ssdMobilenetv1.loadFromUri(modelurl);\n\n          let desc_webcam = \"\"; \n\n          let start_webcam = \"\";\n\n          let submit_attendance = \"\";\n\n          let try_again = \"\";\n\n          let cancel = \"\";\n\n          let warning = \"\";\n\n          async function getMessages() {\n            desc_webcam = await str.get_string('desc_webcam', 'block_attendance_by_face');\n            start_webcam = await str.get_string('start_webcam', 'block_attendance_by_face');\n            submit_attendance = await str.get_string('submit_attendance', 'block_attendance_by_face');\n            try_again = await str.get_string('try_again', 'block_attendance_by_face');\n            cancel = await str.get_string('cancel', 'block_attendance_by_face');\n            warning = await str.get_string('warning_webcam', 'block_attendance_by_face');\n          }\n\n          // Function to detect the face.\n          var detectface = async function (input, croppedImage){\n            const output = await faceapi.detectAllFaces(input);\n            detections = output[0].box;\n            let res = extractFaceFromBox(input, detections, croppedImage);\n            return res;\n          }\n\n          // Function to draw image from the box data.\n          async function extractFaceFromBox(imageRef, box, croppedImage) {\n            const regionsToExtract = [\n              new faceapi.Rect(box.x, box.y, box.width, box.height)\n            ];\n            let faceImages = await faceapi.extractFaces(imageRef, regionsToExtract);\n\n            if (faceImages.length === 0) {\n              console.log(\"No face found\");\n            } else {\n\n              faceImages.forEach((cnv) => {\n                croppedImage.src = cnv.toDataURL();\n              });\n             \n              return croppedImage.src;\n            }\n          }\n\n        $(\".action-modal\").on(\"click\", function () {\n          let st_img_url = \"\";\n          let course_name = \"\";\n          let course_id = $(this).attr(\"id\");\n      \n          // ajax call\n          let wsfunction = \"block_attendance_by_face_image_api\";\n          let params = {\n            courseid: course_id,\n            studentid: studentid,\n          };\n          let request = {\n            methodname: wsfunction,\n            args: params,\n          };\n      \n          Ajax.call([request])[0]\n            .done(function (value) {\n              st_img_url = value[\"image_url\"];\n              course_name = value[\"course_name\"];\n              getMessages().then(() => {\n                console.log(\"Modal Messages are printed\");\n                create_modal();\n              });\n            })\n            .fail(Notification.exception);\n          // end of ajax call\n      \n          let create_modal = () => {\n            ModalFactory.create({\n              type: ModalFactory.types.SAVE_CANCEL,\n              title: str.get_string('title_webcam', 'block_attendance_by_face'),\n              body: `\n              <div>\n              <p id='desc_webcam'> ` + desc_webcam + `\n              <i class=\"icon fa fa-exclamation-circle text-muted fa-fw\" \n                  title=\" ` + warning + ` \" role=\"img\" \n                  aria-label=\" ` + warning + ` \">\n              </i>\n              </p>\n              </div>\n              <video id=\"webcam\" autoplay playsinline width=\"300\" height=\"225\" style=\"display:none;margin:auto\"></video>\n              <canvas id=\"canvas\" class=\"d-none\" style=\"display:none;\"></canvas>\n              <img id=\"st-image\" style=\"display: none;\"/>\n              <img id=\"st-image-cropped\" style=\"display: none;\"/>\n              <img id=\"webcam-image\" style=\"display: none;\"/>\n              <img id=\"webcam-image-cropped\" style=\"display: none;\"/>\n              <div style=\"display: flex; flex-wrap: wrap; align-items: center; justify-content: center; padding: 0.75rem;\">\n                <button id='start-webcam' class=\"btn btn-primary\"> ` + start_webcam +  `</button>\n                <button id=\"submit-attendance\" style=\"display:none;\" class=\"btn btn-primary\"> ` + submit_attendance + `</button>\n                <button id=\"try-again\" style=\"display:none;\" class=\"btn btn-primary\"> ` + try_again + ` </button>\n                <button id='stop-webcam' class=\"btn btn-secondary\" style=\"margin-left:5px;\"> ` + cancel + ` </button>\n              </div>\n              <div id=\"message\"></div>`,\n            }).then(function (modal) {\n              modal.show();\n              $(\".modal-footer\").hide();\n              const webcamElement = document.getElementById(\"webcam\");\n              const canvasElement = document.getElementById(\"canvas\");\n              let studentimg = document.getElementById(\"st-image\");\n              studentimg.src = st_img_url;\n              let st_img = \"\";\n      \n              let webcam = new Webcam(webcamElement, \"user\", canvasElement);\n      \n              $(\".close\").on(\"click\", function () {\n                webcam.stop();\n                window.location.href = $(location).attr(\"href\");\n              });\n      \n              let getDataUrl = (studentimg) => {\n                const canvas = document.createElement(\"canvas\");\n                const ctx = canvas.getContext(\"2d\");\n                // Set width and height\n                canvas.width = studentimg.width;\n                canvas.height = studentimg.height;\n                // Draw the image\n                ctx.drawImage(studentimg, 0, 0);\n                return canvas.toDataURL(\"image/png\");\n              };\n              let displaySubmitAttendance = () => {\n                document.getElementById(\"submit-attendance\").style.display = \"block\";\n              };\n              let hideSubmitAttendance = () => {\n                document.getElementById(\"submit-attendance\").style.display = \"none\";\n              };\n              let displayTryAgain = () => {\n                document.getElementById(\"try-again\").style.display = \"block\";\n              };\n              let hideTryAgain = () => {\n                document.getElementById(\"try-again\").style.display = \"none\";\n              };\n              let removeMessages = () => {\n                const message = document.getElementById(\"message\");\n                while (message.hasChildNodes()) {\n                  message.removeChild(message.firstChild);\n                }\n              };\n              let displaySuccessMessage = () => {\n                hideSubmitAttendance();\n                displayMessage(successmessage, 1);\n              };\n              let displayFailedMessage = () => {\n                hideSubmitAttendance();\n                displayTryAgain();\n                displayMessage(failedmessage, 0);\n              };\n              let displayMessage = (message, flag) => {\n                var spn = document.createElement(\"span\");\n                spn.textContent = message + \".\";\n                spn.setAttribute(\"class\", flag ? \"text-success\" : \"text-danger\");\n                document.getElementById(\"message\").appendChild(spn);\n              };\n              let logAttendance = (sessionId) => {\n                let wsfunction =\n                  \"block_attendance_by_face_update_db\";\n                let params = {\n                  courseid: course_id,\n                  studentid: studentid,\n                  sessionid: sessionId,\n                };\n                let request = {\n                  methodname: wsfunction,\n                  args: params,\n                };\n                console.log(request);\n                Ajax.call([request])[0]\n                  .done(function () {\n                    window.console.log(\"Attendance logged\");\n                  })\n                  .fail(Notification.exception);\n              };\n              let submitAttendance = (st_img, image, sessionId) => {\n                let wsfunction = \"block_attendance_by_face_recognition_api\";\n                let params = {\n                  studentimg: st_img,\n                  webcampicture: image,\n                };\n                let request = {\n                  methodname: wsfunction,\n                  args: params,\n                };\n      \n                Ajax.call([request])[0]\n                  .done(function (value) {\n                    let original_img_response = value[\"original_img_response\"];\n                    //window.console.log(original_img_response);\n                    let face_img_response = value[\"face_img_response\"];\n                    //window.console.log(face_img_response);\n                    let distance = value[\"distance\"];\n                    window.console.log(distance);\n      \n                    if (distance != null && distance < threshold) {\n                      let today = new Date();\n                      webcam.stop();\n                      displaySuccessMessage();\n                      logAttendance(sessionId);\n      \n                      Notification.confirm(\n                        successmessage,\n                        `\n                        Course: ${course_name}<br>\n                        Date: ${today.toLocaleDateString(\"en-UK\")}<br>\n                        `,\n                        \"Continue\", // Confirm.\n                        \"Cancel\", // Cancel.\n                        () => (window.location.href = $(location).attr(\"href\")),\n                        () => (window.location.href = $(location).attr(\"href\"))\n                      );\n                    } else {\n                      displayFailedMessage();\n                    }\n                  })\n                  .fail(function (err) {\n                    window.console.log(err);\n                  });\n                // end of ajax call\n              };\n              // let getRequestForCheckingActiveWindowAPI = (course_id) => {\n              //   let wsfunction =\n              //     \"block_face_recognition_student_attendance_check_active_window\";\n              //   let params = {\n              //     courseid: course_id\n              //   };\n              //   let request = {\n              //     methodname: wsfunction,\n              //     args: params,\n              //   };\n              //   return request;\n              // }\n              $(\"#start-webcam\").on(\"click\", function () {\n                webcamElement.style.display = \"block\";\n                canvasElement.style.display = \"block\";\n                $(\"#start-webcam\").hide();\n                webcam\n                  .start()\n                  .then((result) => {\n                    displaySubmitAttendance();\n      \n                    $(\"#submit-attendance\").on(\"click\", function () {\n                      removeMessages();\n                      if (!st_img) {\n                        st_img = getDataUrl(studentimg);\n                      }\n                      let image = webcam.snap();\n                      let webcamimg = document.getElementById(\"webcam-image\");\n                      let webcamimgcrop = document.getElementById(\"webcam-image-cropped\");\n                      let studentimgcrop = document.getElementById(\"st-image-cropped\");\n                      webcamimg.src = image;\n                      async function a () {\n                        st_img = await detectface(webcamimg, webcamimgcrop);\n                        image = await detectface(studentimg, studentimgcrop);\n                      };\n                      a().then(() => {\n                      //let request = getRequestForCheckingActiveWindowAPI(course_id);\n                      let wsfunction =\n                        \"block_attendance_by_face_check_active_window\";\n                      let params = {\n                        courseid: course_id\n                      };\n                      let request = {\n                        methodname: wsfunction,\n                        args: params,\n                      };\n                      \n                      Ajax.call([request])[0]\n                      .done(function (value) {\n                        if(value.active == 1) {\n                          submitAttendance(st_img, image, value.sessionid);\n                        } else {\n                          displayMessage(\"Course is not open for taking attendance\", 0);\n                        }\n                      })\n                      .fail(function (err) {\n                        window.console.log(err);\n                      });\n\n                      });\n                    });\n                    $(\"#try-again\").on(\"click\", function () {\n                      removeMessages();\n                      hideTryAgain();\n                      document.getElementById(\"submit-attendance\").click();\n                    });\n                  })\n                  .catch((err) => {\n                    window.console.log(err);\n                  });\n              });\n              $(\"#stop-webcam\").on(\"click\", function () {\n                webcam.stop();\n                window.location.href = $(location).attr(\"href\");\n              });\n            });\n          };\n        });\n      }\n    };\n    }\n  );"],"names":["define","$","Ajax","str","ModalFactory","Notification","Webcam","init","studentid","successmessage","failedmessage","threshold","modelurl","faceapi","nets","ssdMobilenetv1","loadFromUri","desc_webcam","start_webcam","submit_attendance","try_again","cancel","warning","detectface","async","input","croppedImage","output","detectAllFaces","detections","box","res","imageRef","regionsToExtract","Rect","x","y","width","height","faceImages","extractFaces","length","forEach","cnv","src","toDataURL","console","log","extractFaceFromBox","on","st_img_url","course_name","course_id","this","attr","request","methodname","args","courseid","call","done","value","get_string","getMessages","then","create_modal","fail","exception","create","type","types","SAVE_CANCEL","title","body","modal","show","hide","webcamElement","document","getElementById","canvasElement","studentimg","st_img","webcam","stop","window","location","href","hideSubmitAttendance","style","display","removeMessages","message","hasChildNodes","removeChild","firstChild","displayFailedMessage","displayMessage","flag","spn","createElement","textContent","setAttribute","appendChild","submitAttendance","image","sessionId","webcampicture","distance","today","Date","sessionid","logAttendance","confirm","toLocaleDateString","err","start","result","canvas","ctx","getContext","drawImage","getDataUrl","snap","webcamimg","webcamimgcrop","studentimgcrop","a","active","click","catch"],"mappings":"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"}